/*.container {
  height: inherit;
}*/

a {
  color: inherit;
  text-decoration: none;
}

.communify {
  max-width: 75%;
  max-height: 450px;
  /*position: absolute;*/
  /*margin-left: -37%;*/
  margin-top: -90%;
}

.fixed-profile {
  position: fixed;
}

.log-button {
  font-weight: bold;
}

.main-window {
  height: 80%;
}

.menu-dropdown {
  margin-top: 50px;
  width: 164px;
}

.boxshadow {
  box-shadow: 0 0 10px rgb(23, 23, 23);
}

.distance-box {
  margin: -2px 10px 0 5px;
}

.margin-bottom {
  margin-bottom: .3em;
}

.inline {
  display: inline-block;
}

.green {
  color: #00bf02;
}

.title-spacer {
  height: .8em;
}

.details-spacer {
  width: 10px;
}

.icon-spacer {
  margin-top: .3em;
}

.md-display-1 {
  font-weight: 500;
}

.icon {
  width: 24px;
  height: 24px;
}

.navbar {
  position: fixed;
}

.navspacer {
  width: 100%;
  height: 60px;
}

.start-btn {
  background-color: #C62828;
  box-shadow: 0 0 7px 2px rgb(185, 185, 185);
}

.font-white {
  color: white;
}

.event {
  width: 80%;
}

.time {
  margin-left: 50px;
  margin-top: 43px;
}

.date {
  margin-left: 10px;
}

.delete-event {
  color: rgb(203, 23, 5);
  text-decoration: underline;
}

.location-input {
  width: 85%;
}

.zip-input {
  width: 12%;
}

.shorten-button {
  max-height: 2em;
}

.noMatch {
  font-size: 12px;
}

.solidarity {
  max-width: 21px;
  max-height: 30px;
  margin-right: 15px;
  margin-bottom: 2px;
}

.mlkmarch {
  width: 100%;
  max-height: 1100px;
  margin-top: -20px;
}

.profile-img {
  object-fit: cover;
  max-height: 15em;
  width: 100%;
}

.profile-thumbnail {
  object-fit: cover;
  border-radius: 50%;
  margin-right: 5px;
}

.img-padding {
  padding-top: 0;
  padding-right: 0;
  padding-bottom: 0;
}

.event-img {
  object-fit: cover;
  max-height: 10em;
  margin-bottom: 1em;
  box-shadow: 2px 3px 9px grey;
  border-radius: 3px;
}

.form {
  min-width: 20em;
}

.rsvp-button {
  width: 100%;
}

.dialogdemoBasicUsage #popupContainer {
  position: relative; }
.dialogdemoBasicUsage .footer {
  width: 100%;
  text-align: center;
 }
.dialogdemoBasicUsage .footer, .dialogdemoBasicUsage .footer > code {
  font-size: 0.8em;
  margin-top: 50px; }

.inputdemoIcons {
  /*
.right-icon {
  position: absolute;
  top: 4px;
  right: 2px;
  left: auto;
  margin-top: 0;
}
*/ }

.inputdemoIcons .inputIconDemo {
  min-height: 48px; }
.inputdemoIcons md-input-container:not(.md-input-invalid) > md-icon.email {
  color: green; }
.inputdemoIcons md-input-container:not(.md-input-invalid) > md-icon.name {
  color: dodgerblue; }
.inputdemoIcons md-input-container.md-input-invalid > md-icon.email,
.inputdemoIcons md-input-container.md-input-invalid > md-icon.name {
  color: red; }

.datepickerdemoBasicUsage {
  /** Demo styles for mdCalendar. */ }
  .datepickerdemoBasicUsage md-content {
    padding-bottom: 200px; }
  .datepickerdemoBasicUsage .validation-messages {
    font-size: 11px;
    color: darkred;
    margin: 10px 0 0 25px; }

    /*
      We're using CSS transitions for when
      the enter and move events are triggered
      for the element that has the .repeated-item
      class
    */
    .repeated-item.ng-enter, .repeated-item.ng-move {
      -webkit-transition:0.5s linear all;
      -moz-transition:0.5s linear all;
      -o-transition:0.5s linear all;
      transition:0.5s linear all;
      opacity:0;
    }

    /*
     The ng-enter-active and ng-move-active
     are where the transition destination properties
     are set so that the animation knows what to
     animate.
    */
    .repeated-item.ng-enter.ng-enter-active,
    .repeated-item.ng-move.ng-move-active {
      opacity:1;
    }

    /*
      We're using CSS keyframe animations for when
      the leave event is triggered for the element
      that has the .repeated-item class
    */
    .repeated-item.ng-leave {
      -webkit-animation:0.5s my_animation;
      -moz-animation:0.5s my_animation;
      -o-animation:0.5s my_animation;
      animation:0.5s my_animation;
    }

    @keyframes my_animation {
      from { opacity:1; }
      to { opacity:0; }
    }

    /*
      Unfortunately each browser vendor requires
      its own definition of keyframe animation code...
    */
    @-webkit-keyframes my_animation {
      from { opacity:1; }
      to { opacity:0; }
    }

    @-moz-keyframes my_animation {
      from { opacity:1; }
      to { opacity:0; }
    }

    @-o-keyframes my_animation {
      from { opacity:1; }
      to { opacity:0; }
    }
